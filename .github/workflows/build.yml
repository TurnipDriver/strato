# A workflow to verify the build on every push to the master branch
name: Build

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: help
          gradle-version: wrapper
          cache-read-only: false

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/settings.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}-${{ hashFiles('**/settings.gradle') }}
            ${{ runner.os }}-gradle-${{ hashFiles('**/build.gradle') }}
            ${{ runner.os }}-gradle-

      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Ninja Build
        run: |
          sudo apt-get install -y ninja-build
          ln -s /usr/bin/ninja .

      - name: Android Assemble
        env:
          CMAKE_C_COMPILER_LAUNCHER: "ccache"
          CMAKE_CXX_COMPILER_LAUNCHER: "ccache"
          CCACHE_COMPILERCHECK: "string:${{ env.NDK_VERSION }}"
        run: ./gradlew --no-daemon --stacktrace --build-cache --parallel --configure-on-demand assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: Strato-APK
          path: app/build/outputs/apk/debug/app-debug.apk
